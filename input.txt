void test(int a,int b,float c,float d){
    int x;
    float y;
    x=a+b;
    y=c/d;
    if(x>=y)
        x=10;
    else
        y=12.5E+2;
}
翁彧贤

void min(int []array){
    int min = array[0];
    for(int i=0;i<array.length;i++){
        if(array[i]<min)
            min=array[i];
    }
    return min;
}

boolean greater(int a,int b){
    return a>b?true:false;
}

void deadLoop(){
    while(true){
        sleep(1);
    }
}

void swap(double a,double b){
    double tmp=a;
    a=b;
    b=tmp;
}

package work.wengyuxian.dfa;

import java.util.HashSet;

public class DVertex {
    public int id;
    public HashSet<Integer> states;
    public boolean isFinal = false;
    public String type = null;

    public DVertex(int aId) {
        id = aId;
    }

    public DVertex(int aId, HashSet<Integer> aStates) {
        id = aId;
        states = aStates;
    }

    public DVertex(int aId, boolean aFinal, String aType) {
        id = aId;
        isFinal = aFinal;
        type = aType;
    }

    public boolean equals(Object obj) {
        DVertex dVertex = (DVertex) obj;
        return states.equals(dVertex.states);
    }

}