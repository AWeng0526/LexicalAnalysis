KEYWORD       : void      
ID            : test      
BRACKET       : (         
KEYWORD       : int       
ID            : a         
SEPARATOR     : ,         
KEYWORD       : int       
ID            : b         
SEPARATOR     : ,         
KEYWORD       : float     
ID            : c         
SEPARATOR     : ,         
KEYWORD       : float     
ID            : d         
BRACKET       : )         
BRACKET       : {         
KEYWORD       : int       
ID            : x         
SEPARATOR     : ;         
KEYWORD       : float     
ID            : y         
SEPARATOR     : ;         
ID            : x         
OPERATOR      : =         
ID            : a         
OPERATOR      : +         
ID            : b         
SEPARATOR     : ;         
ID            : y         
OPERATOR      : =         
ID            : c         
OPERATOR      : /         
ID            : d         
SEPARATOR     : ;         
KEYWORD       : if        
BRACKET       : (         
ID            : x         
OPERATOR      : >         
ID            : y         
BRACKET       : )         
ID            : x         
OPERATOR      : =         
NUMBER        : 10        
SEPARATOR     : ;         
KEYWORD       : else      
ID            : y         
OPERATOR      : =         
NUMBER        : 12.5E+2   
SEPARATOR     : ;         
BRACKET       : }         
KEYWORD       : void      
ID            : min       
BRACKET       : (         
KEYWORD       : int       
BRACKET       : [         
BRACKET       : ]         
ID            : array     
BRACKET       : )         
BRACKET       : {         
KEYWORD       : int       
ID            : min       
OPERATOR      : =         
ID            : array     
BRACKET       : [         
NUMBER        : 0         
BRACKET       : ]         
SEPARATOR     : ;         
KEYWORD       : for       
BRACKET       : (         
KEYWORD       : int       
ID            : i         
OPERATOR      : =         
NUMBER        : 0         
SEPARATOR     : ;         
ID            : i         
OPERATOR      : <         
ID            : array     
DOT           : .         
ID            : length    
SEPARATOR     : ;         
ID            : i         
OPERATOR      : +         
OPERATOR      : +         
BRACKET       : )         
BRACKET       : {         
KEYWORD       : if        
BRACKET       : (         
ID            : array     
BRACKET       : [         
ID            : i         
BRACKET       : ]         
OPERATOR      : <         
ID            : min       
BRACKET       : )         
ID            : min       
OPERATOR      : =         
ID            : array     
BRACKET       : [         
ID            : i         
BRACKET       : ]         
SEPARATOR     : ;         
BRACKET       : }         
KEYWORD       : return    
ID            : min       
SEPARATOR     : ;         
BRACKET       : }         
KEYWORD       : boolean   
ID            : greater   
BRACKET       : (         
KEYWORD       : int       
ID            : a         
SEPARATOR     : ,         
KEYWORD       : int       
ID            : b         
BRACKET       : )         
BRACKET       : {         
KEYWORD       : return    
ID            : a         
OPERATOR      : >         
ID            : b         
SEPARATOR     : ?         
ID            : true      
SEPARATOR     : :         
ID            : false     
SEPARATOR     : ;         
BRACKET       : }         
KEYWORD       : void      
ID            : deadLoop  
BRACKET       : (         
BRACKET       : )         
BRACKET       : {         
KEYWORD       : while     
BRACKET       : (         
ID            : true      
BRACKET       : )         
BRACKET       : {         
ID            : sleep     
BRACKET       : (         
NUMBER        : 1         
BRACKET       : )         
SEPARATOR     : ;         
BRACKET       : }         
BRACKET       : }         
